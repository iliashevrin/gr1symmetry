INFO {
  TITLE:       "Example #7 from the S4 paper on synthesis via learning"
  DESCRIPTION: "Simple arbiter (with spurious grants) where F is bounded by X[..].
                Safety specification.
                Note: the original examples are for Moore systems whose computations start with the input,
                hence the formulas by definition ignore the very first system output.
                Here, however, we consider Mealy machines.
                (This does not require any formula modifications.)"
  SEMANTICS:   Mealy
  TARGET:      Mealy
}

GLOBAL {
  PARAMETERS {
n = 1;
  }

  DEFINITIONS {
    // ensures mutual exclusion on an n-ary bus
    mutual_exclusion(bus) =
     mone(bus,0,(SIZEOF bus) - 1);

    // ensures that none of the signals
    // bus[i] - bus[j] is HIGH
    none(bus,i,j) =
      &&[i <= t <= j]
        !bus[t];

    // ensures that at most one of the signals
    // bus[i] - bus[j] is HIGH
    mone(bus,i,j) =
    i > j : false
    i == j : true
    i < j :
      // either no signal of the lower half is HIGH and at 
      // most one signal of the upper half is HIGH
      (none(bus, i, m(i,j)) && mone(bus, m(i,j) + 1, j)) ||
      // or at most one signal of the lower half is HIGH
      // and no signal in of the upper half is HIGH
      (mone(bus, i, m(i,j)) && none(bus, m(i,j) + 1, j));

    // returns the position between i and j
    m(i,j) = (i + j) / 2;
  }
}

MAIN {
  INPUTS {
    r[n];
  }

  OUTPUTS {
    g[n];
  }

  ASSUMPTIONS { }

  INVARIANTS {
    mutual_exclusion(g);
  }

  GUARANTEES {
    &&[ 0 <= i < n ]
    G (r[i] -> F[0:n-1] g[i]);
  }
}


//#!SYNTCOMP
//STATUS : realizable
//REF_SIZE : 1
//#.//#!SYNTCOMP
//STATUS : unknown
//REF_SIZE : 0
//#
